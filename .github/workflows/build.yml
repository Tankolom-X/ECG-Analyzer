name: build-and-release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  windows-build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Create an exe ECGAnalyzer
        shell: pwsh
        run: pyinstaller -F ECGAnalyzer.py

      - name: Create an exe ElectricAxisCalculator
        shell: pwsh
        run: pyinstaller -F ElectricAxisCalculator.py

      - name: Zip the exe
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path build -Force
          cd dist
          7z a -tzip -r0 ..\build\ECG-Analyzer_windows.zip ElectricAxisCalculator.exe ECGAnalyzer.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ECG-Analyzer_windows
          path: build/ECG-Analyzer_windows.zip
          retention-days: 1

  macos-build:
    runs-on: macos-13
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Create a binary ECGAnalyzer
        run: pyinstaller -F ECGAnalyzer.py

      - name: Create a binary ElectricAxisCalculator
        run: pyinstaller -F ElectricAxisCalculator.py

      - name: Zip the binary
        run: |
          mkdir -p build
          cd dist
          7z a -tzip -r0 ../build/ECG-Analyzer_macos.zip ElectricAxisCalculator ECGAnalyzer

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ECG-Analyzer_macos
          path: build/ECG-Analyzer_macos.zip
          retention-days: 1

  linux-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Create a binary ECGAnalyzer
        run: pyinstaller -F ECGAnalyzer.py

      - name: Create a binary ElectricAxisCalculator
        run: pyinstaller -F ElectricAxisCalculator.py

      - name: Zip the binary
        run: |
          mkdir -p build
          cd dist
          7z a -tzip -r0 ../build/ECG-Analyzer_linux.zip ECGAnalyzer ElectricAxisCalculator

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ECG-Analyzer_linux
          path: build/ECG-Analyzer_linux.zip
          retention-days: 1

  create-release:
    needs: [windows-build, macos-build, linux-build]
    runs-on: ubuntu-latest

    # Выполнять только при создании тега
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            Automated release for version ${{ github.ref_name }}
            Contains builds for Windows, macOS and Linux
          files: |
            artifacts/ECG-Analyzer_windows/ECG-Analyzer_windows.zip
            artifacts/ECG-Analyzer_macos/ECG-Analyzer_macos.zip
            artifacts/ECG-Analyzer_linux/ECG-Analyzer_linux.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}