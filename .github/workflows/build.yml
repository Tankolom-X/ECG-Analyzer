name: build

on:
  push:
    branches: [ main ]

jobs:
  clean-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true  # Включаем Git LFS

      - name: Clean build directory
        run: |
          if [ -d "build" ]; then
            rm -rf build/*
            echo "Cleaned build/"
          else
            mkdir -p build
            echo "Created build/"
          fi

      - name: Commit empty build dir (if needed)
        if: github.ref == 'refs/heads/main'
        run: |
          git add build/
          git commit -m "ci: clean build directory" || echo "No changes to commit"
          git push || echo "Nothing to push"

  windows-build:
    needs: clean-build
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: pwsh
        run: | 
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Create an exe ECGAnalyzer
        shell: pwsh
        run: pyinstaller -F ECGAnalyzer.py

      - name: Create an exe ElectricAxisCalculator
        shell: pwsh
        run: pyinstaller -F ElectricAxisCalculator.py

      - name: Zip the exe
        shell: pwsh
        run: |
          cd D:\a\ECG-Analyzer\ECG-Analyzer\dist
          7z a -tzip -r0 ..\build\ECG-Analyzer_windows.zip ElectricAxisCalculator.exe ECGAnalyzer.exe

      - name: Upload artifact ElectricAxisCalculator
        uses: actions/upload-artifact@v4
        with:
          name: 'build_windows'
          path: 'D:\a\ECG-Analyzer\ECG-Analyzer\build\ECG-Analyzer_windows.zip'
          retention-days: 1


  macos-build:
    needs: clean-build
    runs-on: macos-13
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Create a binary ECGAnalyzer
        run: pyinstaller -F ECGAnalyzer.py

      - name: Create a binary ElectricAxisCalculator
        run: pyinstaller -F ElectricAxisCalculator.py

      - name: Zip the binary ElectricAxisCalculator
        run: |
          ls -l
          cd /Users/runner/work/ECG-Analyzer/ECG-Analyzer/dist
          7z a -tzip -r0 ../build/ECG-Analyzer_macos.zip ElectricAxisCalculator ECGAnalyzer

      - name: Upload artifact ElectricAxisCalculator
        uses: actions/upload-artifact@v4
        with:
          name: 'build_macos'
          path: '/Users/runner/work/ECG-Analyzer/ECG-Analyzer/build/ECG-Analyzer_macos.zip'
          retention-days: 1

  linux-build:
    needs: clean-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Create a binary ECGAnalyzer
        run: pyinstaller -F ECGAnalyzer.py

      - name: Create a binary ElectricAxisCalculator
        run: pyinstaller -F ElectricAxisCalculator.py

      - name: Zip the binary
        run: |
          ls -l
          cd /home/runner/work/ECG-Analyzer/ECG-Analyzer/dist
          7z a -tzip -r0 ../build/ECG-Analyzer_linux.zip ECGAnalyzer ElectricAxisCalculator

      - name: Upload artifact ElectricAxisCalculator
        uses: actions/upload-artifact@v4
        with:
          name: 'build_linux'
          path: '/home/runner/work/ECG-Analyzer/ECG-Analyzer/build/ECG-Analyzer_linux.zip'
          retention-days: 1


  commit-build-files:
    needs: [windows-build, macos-build, linux-build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0  # Полный history для Git LFS

      - uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Set up Git LFS
        run: |
          git lfs install
          git lfs track "*.zip"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Move artifacts to build/
        run: |
          mkdir -p build/
          mv artifacts/build_windows/ECG-Analyzer_windows.zip build/
          mv artifacts/build_macos/ECG-Analyzer_macos.zip build/
          mv artifacts/build_linux/ECG-Analyzer_linux.zip build/

      - name: Commit build files
        run: |
          git add build/ .gitattributes
          git commit -m "build: Update binaries (LFS)"
          git push